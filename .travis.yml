language: java

## export GPG details
before_install:
    - echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
    - echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust

install:
    mvn --settings cd/mvnsettings.xml install -DskipTests=true -Dgpg.skip -Dmaven.javadoc.skip=true -B -V

## Build and release to maven central
script:
    mvn clean deploy --settings cd/mvnsettings.xml -DskipTests=true -B -U -Prelease


## Get the project version
before_deploy:
    - mvn help:evaluate -N -Dexpression=project.version|grep -v '\['
    - export project_version=$(mvn help:evaluate -N -Dexpression=project.version|grep -v '\[')


### Create release in GitHub
deploy:
  provider: releases
  api_key:
    secure: y6ttGjG9N72qwvmRAGS219JCGyEBhN23ZWXOj3rUIFcJvmbbXlfSmB8Kx6N3b8emI2sQnkmwPzlPGd+rO2iIdX8okqd2MMeZwiVtU5UvLSWUm/tWc7dnM6obmDIXDUk80mSMm5DzfK2yW03GsP0ghsvv+yh7EZzQyPVmZn4UgbP0/uyU2qowInaF1xcEN/ef06jJa28y0FFwLZm0tCimyBTICrG/it5aFTrHZSRZnzzZN8cur9US7zxeH7qjnLCmW4Ps3xtoH7phOTgScGu/jv/HXLP/2Ut9BcJwBoZYv2y9ZVkuuOuXJ2KTa0NPF5nD8/3cIUhAmeYzVEsCjA8CUJgbUdzOPcEAM9WRb2fu0QSq1WjFcnV5PgNpBe1X09/Xk1qdiRNilx6u3Yb/IDA1NnbAzY0EqibCZhQBus5SG3fjCUvbbVAdc4lPGWQJCbUX56CRDmtvd4EOicoLjNc5hFgCCGEisxNiiNihZtWK8aRoNc/IU4jC2zxgKZQ2CVj1Q/tpxMQhDbLrrAtBGZOaLON0PML0lJyLK3vp3dP2tKIaWdg7vXjJm7WdoajtNXCH0TyKLUJWmpoayRrM8v2xG4Qk+2OiDrZ60FL/I8bnP3RpfefGcfN/vGPsYETqT5yFsfZ5G3U9GnOFrg9k9DjsBShNZsh/r0V8y3ocjbPYPoI=
  file:
    - gingerspec-starter/target/gingerspec-starter-$project_version.jar
  on:
    repo: PrivaliaTech/gingerspec-starter
    branch: master
  name: $project_version

cache:
    directories:
        - ~/.m2/repository



#language: java
#sudo: false
#
#cache:
#  directories:
#  - $HOME/.m2
#
#stages:
#  - clean
#  - test
#  ## require the branch name to be master
#  - name: deploy
#    if: branch = master
#
### export GPG details
#before_install:
#  - echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
#  - echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust
#
#jobs:
#  include:
#
#  - stage: clean
#    name: "Clean workspace"
#    script: mvn clean
#
#  - stage: test
#    name: "Tesing in Java 8"
#    jdk: oraclejdk8
#    script: mvn clean install -Dmaven.test.skip=true
#
#  - stage: deploy
#    name: "Deploy artifact to Maven central"
#    jdk: oraclejdk8
#    script: mvn clean deploy --settings cd/mvnsettings.xml -P sign,build-extras -Dmaven.test.skip=true
    
