#####################################################################################
# This is an example configuration file for the gitlab CI pipeline
#
# This template shows how to run the different tests that are provided as an example
# when you first create the project.
#
# Use this template as an starting point for running your own tests on the gitlab
# CI pipeline
#
# Happy testing!
#####################################################################################


# This template uses jdk11 for for running tests
image: maven:3.6.1-jdk-11

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository


# Use a selenium standalone node for running selenium tests
services:
  - name: selenium/standalone-chrome:3.141.59
    alias: node

# Cucumber JSON reports are published for each job. For tests that make use of selenium, the folder with screenshots is also published
# Each runner class is executed in a separate job. This way, we can easily visualize and run each job individually
# All jobs belong to the same stage: test
CucumberBackendIT:
  stage: test
  script:
    - 'mvn verify -Dit.test=${groupId}.${artifactId}.${package}.CucumberBackendIT'
  allow_failure: true
  artifacts:
    paths:
    - target/*.json
    when: always

CucumberRestIT:
  stage: test
  script:
    - 'mvn verify -Dit.test=${groupId}.${artifactId}.${package}.CucumberRestIT'
  allow_failure: true
  artifacts:
    paths:
    - target/*.json
    when: always

CucumberSeleniumIT:
  stage: test
  script:
    - 'mvn verify -Dit.test=${groupId}.${artifactId}.${package}.CucumberSeleniumIT -DSELENIUM_NODE=node:4444'
  allow_failure: true
  artifacts:
    paths:
    - target/executions/**
    - target/*.json
    when: always


# At the end of the mvn verify phase, a cucumber json report is generated for each feature. This file serves as the seed to create an
# HTML report in target/cucumber-html-reports. this job takes all json files found in target/ to generate an HTML cucumber report which
# is then published in Github pages. You need to activate the 'Github pages' functionality in your repo for this to work
pages:
  stage: deploy
  script:
    - mvn verify -Dmaven.test.skip=true
    - mkdir -p ./public
    - cp -r target/cucumber-html-reports/* public/
    - cp public/overview-features.html public/index.html
  artifacts:
    paths:
      - public

